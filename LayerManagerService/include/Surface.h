/***************************************************************************
*
* Copyright 2010 BMW Car IT GmbH
*
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*		http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
****************************************************************************/

#ifndef _SURFACE_H_
#define _SURFACE_H_

#include "GraphicalSurface.h"
#include <stdlib.h>
#include "PlatformSurface.h"
#include "PixelFormat.h"

/**
 * Represents a graphical surface generated by an application. Always contained in layers.
 */
class Surface : public GraphicalSurface {

public:
	PixelFormat getPixelFormat(){	return pixformat;	}
	void setPixelFormat(PixelFormat pf){pixformat = pf;}

	// dimensions actually generated by the source application
	// needed for calculations when using a source viewport
	int OriginalSourceWidth;
	int OriginalSourceHeight;

	/**
	 * Platform specific Object containing surface information specific to a used platform.
	 * This typically contains a native window handle/surface handle or information only used
	 * by a specific renderer.unsigned
	 */
	PlatformSurface *platform; // platform/rendering specific window attributes

	long nativeHandle;

	int frameCounter;
private:
	Surface(): GraphicalSurface(TypeSurface) , platform (NULL), frameCounter(0) {}

	friend class LayerList;
	PixelFormat pixformat;

};

#endif /* _SURFACE_H_ */
